-- ======================================================
-- SIMPLIFIED E-COMMERCE DATABASE SCHEMA
-- Everything in main tables - no separate tables for bulk/reviews/coupons
-- ======================================================

-- ======================================================
-- 1. Drop existing tables (clean start)
-- ======================================================
drop table if exists coupon_usage cascade;
drop table if exists coupons cascade;
drop table if exists product_bulk_offers cascade;
drop table if exists reviews cascade;
drop table if exists bulk_savings cascade;
drop table if exists orders cascade;
drop table if exists products cascade;
drop table if exists categories cascade;

-- ======================================================
-- 2. Categories Table (Simple)
-- ======================================================
create table categories (
  id serial primary key,
  name text not null unique,
  image text,
  offer_type text check (offer_type in ('discount', 'none')) default 'none',
  offer_percentage numeric check (offer_percentage >= 0 and offer_percentage <= 100),
  is_active boolean default true,
  created_at timestamp with time zone default now(),
  updated_at timestamp with time zone default now()
);

-- ======================================================
-- 3. Products Table (All-in-One)
-- ======================================================
create table products (
  id serial primary key,
  name text not null,
  category_id int references categories(id) on delete set null,

  -- Basic pricing and inventory
  price numeric not null check (price >= 0),
  old_price numeric check (old_price >= 0),
  status text check (status in ('On Sale', 'Featured', 'In Stock', 'Out of Stock', 'On Backorders')) default 'In Stock',

  -- Book-specific fields
  author text,
  isbn text unique,
  edition text, -- NEW: Book edition field

  -- Content
  description text,
  classes text, -- subject/class level
  tags text[],

  -- Media
  main_image text,
  side_images text[],

  -- Delivery and Returns (as requested)
  delivery_info text default 'Store delivery FREE - 1-3 working days

Home or collection point from £35.00 FREE - On all your orders for home or collection point delivery',
  returns_info text default 'Returns: We will accept exchanges and returns of unworn and unwashed garments within 30 days of the date of purchase (14 days during the sales period).

Returns in store FREE - Your return will usually be processed within a week to a week and a half. We will send you a Return Notification email to notify you once the return has been completed. Please allow 1-3 business days for refunds to be received to the original form of payment once the return has been processed.',

  -- Simple Bulk Pricing (JSONB array instead of separate table)
  -- Example: [{"quantity": 2, "price": 300}, {"quantity": 5, "price": 280}, {"quantity": 10, "price": 250}]
  bulk_pricing jsonb default '[]',

  -- Product discount (can override category discount)
  has_own_discount boolean default false,
  own_discount_percentage numeric check (own_discount_percentage >= 0 and own_discount_percentage <= 100),

  -- Reviews (JSONB array instead of separate table)
  -- Example: [{"user": "John", "rating": 5, "comment": "Great book!", "date": "2024-01-01"}]
  reviews jsonb default '[]',

  -- Metadata
  weight text,
  year int,
  rating numeric check (rating >= 0 and rating <= 5) default 0,

  is_active boolean default true,
  created_at timestamp with time zone default now(),
  updated_at timestamp with time zone default now()
);

-- ======================================================
-- 4. Coupons Table (Simplified)
-- ======================================================
create table coupons (
  id serial primary key,
  code text not null unique,
  discount_value numeric check (discount_value >= 0) not null,
  minimum_order_amount numeric check (minimum_order_amount >= 0),
  valid_until timestamp with time zone,
  description text,
  created_at timestamp with time zone default now(),
  updated_at timestamp with time zone default now()
);

-- ======================================================
-- 5. Orders Table (Simplified)
-- ======================================================
create table orders (
  id serial primary key,
  order_id text unique not null,
  user_info jsonb not null,
  items jsonb not null,
  order_summary jsonb not null,
  payment jsonb,
  delivery jsonb,
  order_status text check (order_status in ('Pending', 'Confirmed', 'Processing', 'Shipped', 'Delivered', 'Cancelled', 'Refunded')) default 'Pending',
  order_date date default current_date,
  created_at timestamp with time zone default now(),
  updated_at timestamp with time zone default now()
);

-- ======================================================
-- 5. Sample Data - Categories
-- ======================================================
insert into categories (name, image, offer_type, offer_percentage) values
('Educational Books', 'https://res.cloudinary.com/demo/image/upload/v1691234567/books.jpg', 'discount', 15.0),
('Stationery', 'https://res.cloudinary.com/demo/image/upload/v1691234567/stationery.jpg', 'discount', 25.0),
('Science Books', 'https://res.cloudinary.com/demo/image/upload/v1691234567/science.jpg', 'discount', 20.0),
('Literature', 'https://res.cloudinary.com/demo/image/upload/v1691234567/literature.jpg', 'none', null);

-- ======================================================
-- 6. Sample Data - Coupons
-- ======================================================
insert into coupons (code, discount_value, minimum_order_amount, valid_until, description) values
('WELCOME10', 10, 500, '2024-12-31 23:59:59', 'Welcome discount for new customers'),
('BOOK50', 50, 300, '2024-12-31 23:59:59', 'Flat ₹50 off on books'),
('STUDENT20', 20, 200, '2024-12-31 23:59:59', '20% off for students'),
('BULK100', 100, 1000, '2024-12-31 23:59:59', '₹100 off on bulk orders');

-- ======================================================
-- 7. Sample Data - Products (All-in-One)
-- ======================================================
insert into products (
  name, category_id, price, old_price, status,
  author, isbn, edition, description, classes, tags,
  main_image, side_images, delivery_info, returns_info,
  bulk_pricing, has_own_discount, own_discount_percentage,
  reviews, weight, year, rating
) values
(
  'Complete Mathematics Guide - Class 10', 1, 450.00, 500.00, 'In Stock',
  'Dr. R.S. Aggarwal', '978-81-8488-652-3', '2024 Edition',
  'Comprehensive mathematics guide covering entire CBSE Class 10 syllabus with solved examples and practice questions.',
  'Class 10, CBSE',
  array['mathematics', 'cbse', 'class10', 'guide'],
  'https://res.cloudinary.com/demo/image/upload/v1691234567/math_guide.jpg',
  array[
    'https://res.cloudinary.com/demo/image/upload/v1691234567/math_guide_back.jpg',
    'https://res.cloudinary.com/demo/image/upload/v1691234567/math_guide_inside.jpg'
  ],
  'Store delivery FREE - 1-3 working days

Home or collection point from £35.00 FREE - On all your orders for home or collection point delivery',
  'Returns: We will accept exchanges and returns of unworn and unwashed garments within 30 days of the date of purchase (14 days during the sales period).

Returns in store FREE - Your return will usually be processed within a week to a week and a half.',
  '[{"quantity": 2, "price": 430}, {"quantity": 5, "price": 410}, {"quantity": 10, "price": 390}]',
  true, 20,
  '[
    {"user": "Priya Sharma", "email": "priya.s@email.com", "rating": 5, "comment": "Excellent book! Very helpful for exam preparation.", "date": "2024-01-15", "verified": true},
    {"user": "Rahul Kumar", "email": "rahul.k@email.com", "rating": 4, "comment": "Good content but could use more solved examples.", "date": "2024-01-10", "verified": true}
  ]',
  '800g', 2024, 4.5
),
(
  'English Grammar & Composition', 1, 299.00, 350.00, 'Featured',
  'Wren & Martin', '978-81-8596-789-1', 'Revised Edition',
  'Complete guide to English grammar with composition exercises for high school students.',
  'Class 9-12',
  array['english', 'grammar', 'composition', 'high school'],
  'https://res.cloudinary.com/demo/image/upload/v1691234567/english_grammar.jpg',
  array[
    'https://res.cloudinary.com/demo/image/upload/v1691234567/grammar_back.jpg'
  ],
  'Store delivery FREE - 1-3 working days

Home or collection point from £35.00 FREE - On all your orders for home or collection point delivery',
  'Returns: We will accept exchanges and returns of unworn and unwashed garments within 30 days of the date of purchase (14 days during the sales period).

Returns in store FREE - Your return will usually be processed within a week to a week and a half.',
  '[{"quantity": 3, "price": 285}, {"quantity": 6, "price": 270}]',
  false, null,
  '[
    {"user": "Anita Patel", "email": "anita.p@email.com", "rating": 4, "comment": "Good reference book for grammar.", "date": "2024-01-12", "verified": true}
  ]',
  '500g', 2024, 4.2
),
(
  'Physics Concepts for JEE', 3, 899.00, 999.00, 'On Sale',
  'H.C. Verma', '978-81-7709-187-7', '3rd Edition',
  'Advanced physics concepts with numerical problems for JEE preparation.',
  'JEE, Class 11-12',
  array['physics', 'jee', 'advanced', 'concepts'],
  'https://res.cloudinary.com/demo/image/upload/v1691234567/physics_jee.jpg',
  array[
    'https://res.cloudinary.com/demo/image/upload/v1691234567/physics_contents.jpg',
    'https://res.cloudinary.com/demo/image/upload/v1691234567/physics_problems.jpg'
  ],
  'Store delivery £5.99 - 2-4 working days

Home or collection point from £50.00 FREE - Delivery charges apply for orders below £50.00',
  'Returns: We will accept exchanges and returns of books within 14 days for technical books.

Returns in store available - Processing time 1-2 weeks for technical books.',
  '[]', -- No bulk pricing for this product
  false, null,
  '[
    {"user": "Dr. Suresh", "email": "suresh@school.edu", "rating": 5, "comment": "Excellent for JEE preparation. Clear concepts.", "date": "2024-01-08", "verified": true},
    {"user": "Student123", "email": "student@email.com", "rating": 5, "comment": "Best physics book ever!", "date": "2024-01-20", "verified": false}
  ]',
  '1.2kg', 2024, 4.8
);

-- ======================================================
-- 7. Sample Order Data
-- ======================================================
insert into orders (
  order_id, user_info, items, order_summary, payment, delivery, order_status
) values
(
  'BOOK2024001',
  '{
    "userId": "USR001",
    "name": "Rajesh Gupta",
    "email": "rajesh.gupta@email.com",
    "phone": "+91-9876543210",
    "address": {
      "street": "45, Green Valley Apartments",
      "city": "Mumbai",
      "state": "Maharashtra",
      "pincode": "400001"
    }
  }',
  '[
    {
      "productId": 1,
      "name": "Complete Mathematics Guide - Class 10",
      "author": "Dr. R.S. Aggarwal",
      "quantity": 3,
      "unitPrice": 450.00,
      "bulkPrice": 410.00,
      "appliedDiscounts": {
        "categoryDiscount": 15,
        "productCoupon": 20,
        "bulkDiscount": "5+ books"
      },
      "finalPrice": 328.00,
      "totalPrice": 984.00
    },
    {
      "productId": 2,
      "name": "English Grammar & Composition",
      "author": "Wren & Martin",
      "quantity": 1,
      "unitPrice": 299.00,
      "appliedDiscounts": {
        "categoryDiscount": 15,
        "productCoupon": 45
      },
      "finalPrice": 209.15,
      "totalPrice": 209.15
    }
  ]',
  '{
    "subTotal": 1193.15,
    "categoryDiscounts": 112.35,
    "productCoupons": 90.00,
    "bulkDiscounts": 40.00,
    "totalSavings": 242.35,
    "deliveryCharge": 0.00,
    "grandTotal": 950.80
  }',
  '{
    "method": "UPI",
    "status": "Paid",
    "transactionId": "UPI789654123",
    "amount": 950.80
  }',
  '{
    "status": "Delivered",
    "deliveryType": "Home Delivery",
    "deliveredDate": "2024-01-18",
    "trackingId": "BK456789123"
  }',
  'Delivered'
);

-- ======================================================
-- 8. Create Indexes for Performance
-- ======================================================
create index idx_products_category_id on products(category_id);
create index idx_products_status on products(status);
create index idx_products_isbn on products(isbn);
create index idx_products_author on products(author);
create index idx_products_rating on products(rating);
create index idx_orders_order_id on orders(order_id);
create index idx_orders_status on orders(order_status);

-- ======================================================
-- 9. Update Product Ratings Function (from reviews JSONB)
-- ======================================================
create or replace function update_product_rating()
returns trigger as $$
begin
  -- Calculate average rating from reviews JSONB array
  update products
  set rating = (
    select round(
      (
        select avg((review->>'rating')::numeric)
        from jsonb_array_elements(coalesce(new.reviews, '[]'::jsonb)) as review
        where (review->>'verified')::boolean = true
      )::numeric, 1
    )
  )
  where id = new.id;
  return new;
end;
$$ language plpgsql;

create trigger update_product_rating_trigger
  after update of reviews on products
  for each row execute function update_product_rating();

-- ======================================================
-- 10. Update timestamps trigger
-- ======================================================
create or replace function update_updated_at_column()
returns trigger as $$
begin
  new.updated_at = now();
  return new;
end;
$$ language plpgsql;

create trigger update_categories_updated_at before update on categories
  for each row execute function update_updated_at_column();

create trigger update_products_updated_at before update on products
  for each row execute function update_updated_at_column();

create trigger update_orders_updated_at before update on orders
  for each row execute function update_updated_at_column();

-- ======================================================
-- 11. Enable Row Level Security (RLS)
-- ======================================================
alter table categories enable row level security;
alter table products enable row level security;
alter table orders enable row level security;

-- ======================================================
-- 12. RLS Policies
-- ======================================================
create policy categories_all on categories for all using (true) with check (true);
create policy products_all on products for all using (true) with check (true);
create policy orders_all on orders for all using (true) with check (true);

-- ======================================================
-- 13. Useful Views
-- ======================================================

-- Products with category info
create view products_with_category as
select
  p.*,
  c.name as category_name,
  c.offer_type as category_offer_type,
  c.offer_percentage as category_offer_percentage,
  jsonb_array_length(coalesce(p.reviews, '[]'::jsonb)) as review_count,
  jsonb_array_length(coalesce(p.bulk_pricing, '[]'::jsonb)) as bulk_pricing_tiers
from products p
left join categories c on p.category_id = c.id
where p.is_active = true;


-- Order summary view
create view order_summary as
select
  o.*,
  (o.user_info->>'name') as customer_name,
  (o.user_info->>'email') as customer_email,
  (o.order_summary->>'grandTotal')::numeric as total_amount
from orders o
order by o.created_at desc;